apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: default
  labels:
    app: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
      - name: vaultwarden
        image: ghcr.io/dani-garcia/vaultwarden:1.30.3 # {"$imagepolicy": "flux-system:vaultwarden"}
        env:
        - name: DOMAIN
          value: "https://vault.thecullensnz.com"
        #        - name: SIGNUPS_ALLOWED
        #          value: "true"

        volumeMounts:
        - name: vaultwarden-host-volume
          mountPath: /data
        ports:
        - containerPort: 80
      volumes:
      - name: vaultwarden-host-volume
        persistentVolumeClaim:
          claimName: pvc-hostpath-vaultwarden
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden-service
  namespace: default
spec:
  selector:
    app: vaultwarden
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath-vaultwarden
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-vaultwarden
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/storage/kube/vaultwarden"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden
  namespace: default
spec:
  tls:
  - hosts:
    - "*.thecullensnz.com"
    secretName: letsencrypt-wildcard-cert-thecullensnz.com
  rules:
  - host: "vault.thecullensnz.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vaultwarden-service
            port:
              number: 80
